{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tickets.service\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/tabs\";\nexport class TicketsAreaComponent {\n  constructor(ticketsService) {\n    this.ticketsService = ticketsService;\n    this.amount = 1;\n    this.curDate = new Date().toLocaleDateString();\n  }\n  ngOnInit() {\n    this.ticketsService.askForList();\n    // refresh list every 10 minutes\n    // in the real world - we'll do it in the server side using web socket\n    setInterval(this.ticketsService.askForList, 10 * 60 * 1000);\n  }\n  static #_ = this.ɵfac = function TicketsAreaComponent_Factory(t) {\n    return new (t || TicketsAreaComponent)(i0.ɵɵdirectiveInject(i1.TicketsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TicketsAreaComponent,\n    selectors: [[\"app-tickets-area\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[1, \"amount\"], [\"mat-icon-button\", \"\", 3, \"click\"], [1, \"date\"], [1, \"times\"], [\"label\", \"\\u05D1\\u05D5\\u05E7\\u05E8\"], [\"label\", \"\\u05E6\\u05D4\\u05E8\\u05D9\\u05DD\"], [\"label\", \"\\u05D0\\u05D7\\u05E8\\u05D9 \\u05D4\\u05E6\\u05D4\\u05E8\\u05D9\\u05DD\"]],\n    template: function TicketsAreaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"\\u05E4\\u05E8\\u05D8\\u05D9 \\u05D4\\u05E1\\u05D9\\u05D5\\u05E8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"h3\");\n        i0.ɵɵtext(4, \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05DE\\u05D1\\u05E7\\u05E8\\u05D9\\u05DD: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function TicketsAreaComponent_Template_button_click_5_listener() {\n          return ctx.amount = ctx.amount + 1;\n        });\n        i0.ɵɵelementStart(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"add_circle_outline\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"h3\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function TicketsAreaComponent_Template_button_click_10_listener() {\n          return ctx.amount = ctx.amount > 1 ? ctx.amount - 1 : 1;\n        });\n        i0.ɵɵelementStart(11, \"mat-icon\");\n        i0.ɵɵtext(12, \"remove_circle_outline\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"h3\");\n        i0.ɵɵtext(14, \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA: \");\n        i0.ɵɵelementStart(15, \"span\", 2);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 3)(18, \"mat-tab-group\")(19, \"mat-tab\", 4);\n        i0.ɵɵtext(20, \" Content 1 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-tab\", 5);\n        i0.ɵɵtext(22, \" Content 2 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-tab\", 6);\n        i0.ɵɵtext(24, \" Content 3 \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate(ctx.amount);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", ctx.curDate, \"\");\n      }\n    },\n    dependencies: [i2.MatButton, i3.MatIcon, i4.MatTabGroup, i4.MatTab],\n    styles: [\".amount[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90aWNrZXRzLWFyZWEvdGlja2V0cy1hcmVhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmFtb3VudHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["TicketsAreaComponent","constructor","ticketsService","amount","curDate","Date","toLocaleDateString","ngOnInit","askForList","setInterval","_","i0","ɵɵdirectiveInject","i1","TicketsService","_2","selectors","decls","vars","consts","template","TicketsAreaComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TicketsAreaComponent_Template_button_click_5_listener","TicketsAreaComponent_Template_button_click_10_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵtextInterpolate1"],"sources":["C:\\Users\\User\\Documents\\YVTest\\YV-ng-Client\\src\\app\\components\\tickets-area\\tickets-area.component.ts","C:\\Users\\User\\Documents\\YVTest\\YV-ng-Client\\src\\app\\components\\tickets-area\\tickets-area.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TicketsService } from 'src/app/services/tickets.service';\n\n@Component({\n  selector: 'app-tickets-area',\n  templateUrl: './tickets-area.component.html',\n  styleUrls: ['./tickets-area.component.css']\n})\nexport class TicketsAreaComponent implements OnInit {\n\n  public amount:number = 1;\n  public curDate:string = new Date().toLocaleDateString();\n\n  constructor(\n    public ticketsService:TicketsService\n  ) { }\n\n  ngOnInit(): void {\n    this.ticketsService.askForList();\n\n    // refresh list every 10 minutes\n    // in the real world - we'll do it in the server side using web socket\n    setInterval(this.ticketsService.askForList, 10*60*1000);\n  }\n\n  \n\n}\n","<h2>פרטי הסיור</h2>\n\n<div class=\"amount\">\n    <h3>מספר מבקרים: </h3>\n    <button mat-icon-button (click)=\"this.amount = this.amount+1\"><mat-icon>add_circle_outline</mat-icon></button>\n    <h3>{{ this.amount }}</h3>\n    <button mat-icon-button (click)=\"this.amount = (this.amount>1)? this.amount-1:1\"><mat-icon>remove_circle_outline</mat-icon></button>\n</div> \n\n<h3>תאריך: <span class=\"date\"> {{ this.curDate }}</span></h3>\n\n<div class=\"times\">\n    <mat-tab-group>\n        <mat-tab label=\"בוקר\"> Content 1 </mat-tab>\n        <mat-tab label=\"צהרים\"> Content 2 </mat-tab>\n        <mat-tab label=\"אחרי הצהרים\"> Content 3 </mat-tab>\n      </mat-tab-group>\n</div>\n"],"mappings":";;;;;AAQA,OAAM,MAAOA,oBAAoB;EAK/BC,YACSC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;IAJhB,KAAAC,MAAM,GAAU,CAAC;IACjB,KAAAC,OAAO,GAAU,IAAIC,IAAI,EAAE,CAACC,kBAAkB,EAAE;EAInD;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACL,cAAc,CAACM,UAAU,EAAE;IAEhC;IACA;IACAC,WAAW,CAAC,IAAI,CAACP,cAAc,CAACM,UAAU,EAAE,EAAE,GAAC,EAAE,GAAC,IAAI,CAAC;EACzD;EAAC,QAAAE,CAAA,G;qBAfUV,oBAAoB,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBf,oBAAoB;IAAAgB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRjCX,EAAA,CAAAa,cAAA,SAAI;QAAAb,EAAA,CAAAc,MAAA,8DAAU;QAAAd,EAAA,CAAAe,YAAA,EAAK;QAEnBf,EAAA,CAAAa,cAAA,aAAoB;QACZb,EAAA,CAAAc,MAAA,sEAAa;QAAAd,EAAA,CAAAe,YAAA,EAAK;QACtBf,EAAA,CAAAa,cAAA,gBAA8D;QAAtCb,EAAA,CAAAgB,UAAA,mBAAAC,sDAAA;UAAA,OAAAL,GAAA,CAAApB,MAAA,GAAAoB,GAAA,CAAApB,MAAA,GAAmC,CAAC;QAAA,EAAC;QAACQ,EAAA,CAAAa,cAAA,eAAU;QAAAb,EAAA,CAAAc,MAAA,yBAAkB;QAAAd,EAAA,CAAAe,YAAA,EAAW;QACrGf,EAAA,CAAAa,cAAA,SAAI;QAAAb,EAAA,CAAAc,MAAA,GAAiB;QAAAd,EAAA,CAAAe,YAAA,EAAK;QAC1Bf,EAAA,CAAAa,cAAA,iBAAiF;QAAzDb,EAAA,CAAAgB,UAAA,mBAAAE,uDAAA;UAAA,OAAAN,GAAA,CAAApB,MAAA,GAAAoB,GAAA,CAAApB,MAAA,GAAoC,CAAC,GAAAoB,GAAA,CAAApB,MAAA,GAAe,CAAC,GAAC,CAAC;QAAA,EAAC;QAACQ,EAAA,CAAAa,cAAA,gBAAU;QAAAb,EAAA,CAAAc,MAAA,6BAAqB;QAAAd,EAAA,CAAAe,YAAA,EAAW;QAG/Hf,EAAA,CAAAa,cAAA,UAAI;QAAAb,EAAA,CAAAc,MAAA,wCAAO;QAAAd,EAAA,CAAAa,cAAA,eAAmB;QAACb,EAAA,CAAAc,MAAA,IAAkB;QAAAd,EAAA,CAAAe,YAAA,EAAO;QAExDf,EAAA,CAAAa,cAAA,cAAmB;QAEYb,EAAA,CAAAc,MAAA,mBAAU;QAAAd,EAAA,CAAAe,YAAA,EAAU;QAC3Cf,EAAA,CAAAa,cAAA,kBAAuB;QAACb,EAAA,CAAAc,MAAA,mBAAU;QAAAd,EAAA,CAAAe,YAAA,EAAU;QAC5Cf,EAAA,CAAAa,cAAA,kBAA6B;QAACb,EAAA,CAAAc,MAAA,mBAAU;QAAAd,EAAA,CAAAe,YAAA,EAAU;;;QAVlDf,EAAA,CAAAmB,SAAA,GAAiB;QAAjBnB,EAAA,CAAAoB,iBAAA,CAAAR,GAAA,CAAApB,MAAA,CAAiB;QAIMQ,EAAA,CAAAmB,SAAA,GAAkB;QAAlBnB,EAAA,CAAAqB,kBAAA,MAAAT,GAAA,CAAAnB,OAAA,KAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}