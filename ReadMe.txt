כללי:

הפרוייקט הוא מטלת בית מטעם מחלקת המחשוב ביד ושם והוא מדמה דף הזמנת כרטיסי כניסה למוזיאון יד ושם.

---------------
ה-stack:
בסיס נתונים: אין
צד שרת: .NET
צד לקוח: Angular + .NET

-----------
אתגרים עיקריים:

צד שרת:
שרת בסיסי 

צד לקוח:
חלוקה נכונה לקומפוננטות ובנייתן באמצעות Angular.
עיצוב באמצעות angular/material.
קוד יעיל
שימוש בטכנולוגיה לא מוכרת (.NET)!!

------------------
סדר הפעולות:
כדי לעמוד באתגרים האלה הגדרתי את סדר הפעולות הבא:

1. צד שרת בסיסי
 - רשימת זמנים יומית (get)
 - הזמנת סיור (post)
 - DTOs מתאימים

2. צד לקוח - פונקציונליות בסיסית (תוך שימוש בטכנולוגיה המוכרת של VSCode) הכוללת
 - קומפוננטות + פריסה
 - tickets service
- ביצוע הזמנה
 - עדכון זמנים כל עשר דקות באמצעות setInterval  (צד לקוח מבקש את העדכון).

3. כתיבה מחדש של צד לקוח ב-.NET
(כדי להפריד בין אתגר הבניה הנכונה לבין אתגר הטכנולוגיה החדשה).

4. מימוש web socket לעדכון זמנים כל 10 דקות  (צד שרת יוזם את העדכון).

5. שפצורים 
צד שרת
 - יצירת רשימת זמנים עם ערכים רנדומליים
 - החזרת ערך שלילי כשאי אפשר להזמין כרטיסים = קוד תקלה

צד לקוח
 - ליטוש תצוגה (css מושקע)
 - ריכוז string-ים נצרכים באובייקט json (תיקיית config?)
 - עדכון תצוגה בימי שישי (כאשר סגור אחה"צ)

אבטחה נוספת: אי אפשר להזמין כרטיסים לשעה שכבר עברה (צד לקוח. גם צד שרת?)

6. nice to have אם ישאר זמן
 - החלפת תצוגה עברית/אנגלית בעזרת language service


ולבסוף- תיעוד והעלאה ל-git

==========================================
צד לקוח:


צד הלקוח הוא SPA בסיסי, ללא routes. 
ע"פ הגדרת המשימה, הקומפוננטות מעוצבות בעזרת Angular material.

הקומפוננטות העיקריות הן: 
app-tickets-area 
מציגה את פרטי הכניסה : כמות מבקרים ושעות הכניסה האפשריות
app-luz-item
מציגה את פרטי שעת כניסה אפשרית יחידה

המידע מוחזק ומתנהל ב-ticketsService.


----------------------
ראוי לציין כי במהלך הפיתוח נתקלתי בבעיית תצוגה באובייקט Tab של Material: לא רואים את הטקסט (בוקר/צהרים/אחה"צ).
הדבר גרם לי עיכוב מרובה, עד שגיליתי שזו בעיה מוכרת. אך כיוון שהגדרת המשימה כללה שימוש ב-tab השארתי אותו. 
אופציית מימוש אחרת היא להשתמש ב-radio buttons (או באובייקט toggle buttons) ולהחליף את התצוגה בהתאם לכפתור הנבחר.
